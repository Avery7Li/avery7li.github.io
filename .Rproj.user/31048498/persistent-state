build-last-errors="[]"
build-last-errors-base-dir=""
build-last-outputs="[{\"type\":0,\"output\":\"==> rmarkdown::render_site(encoding = 'UTF-8')\\n\\n\"},{\"type\":1,\"output\":\"Start building sites â€¦ \\nhugo v0.96.0-2fd4a7d3d6845e75f8b8ae3a2a7bd91438967bbb+extended darwin/amd64 BuildDate=2022-03-26T09:15:58Z VendorInfo=gohugoio\\n\"},{\"type\":1,\"output\":\"WARN 2022/04/07 14:11:53 .Path when the page is backed by a file is deprecated and will be removed in a future release. We plan to use Path for a canonical source path and you probably want to check the source is a file. To get the current behaviour, you can use a construct similar to the one below:\\n\\n  {{ $path := \\\"\\\" }}\\n  {{ with .File }}\\n\\t{{ $path = .Path }}\\n  {{ else }}\\n\\t{{ $path = .Path }}\\n  {{ end }}\\n\\n\\nRe-run Hugo with the flag --panicOnWarning to get a better error message.\\n\"},{\"type\":1,\"output\":\"\\n                   | EN  \\n-------------------+-----\\n  Pages            | 88  \\n  Paginator pages  |  0  \\n  Non-page files   | 32  \\n  Static files     | 18  \\n  Processed images | 41  \\n  Aliases          | 22  \\n  Sitemaps         |  1  \\n  Cleaned          |  0  \\n\\nTotal in 662 ms\\n\"},{\"type\":2,\"output\":\"\\n==> The site has been generated to the directory 'public'.\\n\\n** Note that normally you cannot just open the .html files in this directory to view them in a browser. This directory need to be served before you can preview web pages correctly (e.g., you may deploy the folder to a web server). Alternatively, blogdown::serve_site() gives you a local preview of the site.\\n\\n\"}]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"ignoreCase\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOn\":[],\"matchOff\":[],\"replaceMatchOn\":[],\"replaceMatchOff\":[]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":false,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"
